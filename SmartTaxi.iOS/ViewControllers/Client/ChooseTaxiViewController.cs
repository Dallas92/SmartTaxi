// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using Google.Maps;
using System.Drawing;
using SmartTaxi.Models;
using System.Linq;

namespace SmartTaxi.iOS
{
	public partial class ChooseTaxiViewController : UIViewController
	{
		public MapView mapView ;

		public ChooseTaxiViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			AppDelegate.currentViewController = this;

			AppDelegate.AddGestureRecognizer (this.View);

			_img1.Image = UIImage.FromBundle ("Menu/compass.png");
			_btn2.SetImage (UIImage.FromBundle ("Menu/order-cancel.png"), UIControlState.Normal);
			_btn2.TouchUpInside += (sender, e) => {

				AppDelegate.API.Clients.DeleteOrder(AppDelegate.Order.OrderId);
				AppDelegate.Order = new SmartTaxi.Models.Order();

				var vController = (AppDelegate.Storyboard.InstantiateViewController ("MainViewController") as UIViewController);
				this.NavigationController.PushViewController (vController, false);
			};

			_text1.Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);


			var camera = CameraPosition.FromCamera (
				latitude: 53.216040, 
				longitude: 63.631954, 
				zoom: 13);

			mapView = MapView.FromCamera (RectangleF.Empty, camera);
			mapView.Frame = new RectangleF(0,94,this.View.Frame.Width, this.View.Frame.Height-94);
			mapView.TappedMarker = (map, marker) => {
				//AppDelegate.Order.FromAddress = _txtView.Text;
				//AppDelegate.Order.FromLocation = marker.Position.Latitude +", "+marker.Position.Longitude;
				//var vController = (AppDelegate.Storyboard.InstantiateViewController ("ToViewController") as UIViewController);
				//this.NavigationController.PushViewController (vController, true);

				if(marker.UserData!=null){
					var drId = (marker.UserData as NSString).ToString();
					var dr = AppDelegate.Drivers.FirstOrDefault(a=>a.TaxiId==drId);

					if(dr!=null){
						TaxiInfoViewController.taxi = dr;
						var vController = (AppDelegate.Storyboard.InstantiateViewController ("TaxiInfoViewController") as UIViewController); 
						NavigationController.PushViewController (vController, true);
					}
				}

				return true;
			};

			Google.Maps.Marker marker3 = new Marker (){
				Position = new MonoTouch.CoreLocation.CLLocationCoordinate2D (53.216040, 63.631954),
				Icon = UIImage.FromBundle ("Map/from.png"),
				Map = mapView,
				Tappable = true
			};
			mapView.StartRendering ();
			this.View.AddSubview (mapView);
		}

		public void ShowDrivers(){
			mapView.Clear ();

			Google.Maps.Marker marker2 = new Marker (){
				Position = new MonoTouch.CoreLocation.CLLocationCoordinate2D (53.216040, 63.631954),
				Icon = UIImage.FromBundle ("Map/from.png"),
				Map = mapView,
				Tappable = true,
				//UserData =  new NSString(Appde)
			};

			Google.Maps.Circle circle = new Circle () {


			};
			circle.FillColor = UIColor.FromRGBA(255, 216, 0,50);
			circle.StrokeColor = UIColor.FromRGB(240,240,240);
			circle.StrokeWidth = 1;
			circle.Position = new MonoTouch.CoreLocation.CLLocationCoordinate2D (53.216040, 63.631954);
			circle.Radius = 1000;
			circle.Map = mapView;

//			CircleOptions circleOptions = new CircleOptions ();
//			circleOptions.InvokeCenter(new LatLng (0, 0));
//			circleOptions.InvokeRadius(5000);
//			circleOptions.InvokeFillColor(Android.Graphics.Color.Blue);
//			Circle newCircle = _map.AddCircle(circleOptions);
//			newCircle.Visible = true;

			if (AppDelegate.Drivers != null && AppDelegate.Drivers.Count > 0) {
				foreach (var dr in AppDelegate.Drivers) {
					Google.Maps.Marker marker = new Marker (){
						Position = new MonoTouch.CoreLocation.CLLocationCoordinate2D (double.Parse(dr.TaxiLocation.Split(',')[0]),
																					  double.Parse(dr.TaxiLocation.Split(',')[1])),
						Icon = UIImage.FromBundle ("Map/taxi.png"),
						Map = mapView,
						Tappable = true,
						UserData = new NSString(dr.TaxiId)
						//Draggable = true
					};
				}
			}
		}
	}
}

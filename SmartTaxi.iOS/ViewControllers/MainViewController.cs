// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Collections.Generic;
using System.Drawing;
using SmartTaxi.Models;

namespace SmartTaxi.iOS
{
	public partial class MainViewController : UIViewController
	{
		private List<MenuItem> menuItems;

		public static int NavPage{ get; set; }

		public MainViewController (IntPtr handle) : base (handle){}



		public override void ViewDidLoad ()
		{


			this.scrollView.ShowsVerticalScrollIndicator = false;
			this.NavigationItem.SetHidesBackButton (true, false);


			#region TestMethods

//
			//AppDelegate.API.Taxi.Register (taxi);
			//AppDelegate.API.Taxi.Login (taxi.TaxiPhone, taxi.TaxiPassword);
//			//AppDelegate.API.Taxi.Logout ();
//			//AppDelegate.API.Taxi.Activate ("5934");
//			//AppDelegate.API.Taxi.ResetPassword (taxi.TaxiPhone);
//			//AppDelegate.API.Taxi.GetProfile ();
//			string id = AppDelegate.API.Orders.Create (new Order {
//				ClientId = AppDelegate.ClientId,
//				FromAddress = "Откуда",
//				ToAddress = "Куда",
//				FromLocation = "52.123124124, 75.123124124",
//				ToLocation = "52.123124124, 75.123124124",
//				Comment = "Голова болит помАгите",
//				Minutes = "60"
//			});
//			AppDelegate.API.Orders.Rate (AppDelegate.ClientId.ToString(), id, 4, "87327d85-cc92-489e-806f-220b843d6dde");
////			AppDelegate.API.Taxi.SetOnline ("52.123124124, 75.123124124");
////			AppDelegate.API.Orders.GetById (id);
			//AppDelegate.API.Clients.Connect (AppDelegate.ClientId.ToString());
			//this.View.BackgroundColor = UIColor.FromRGB(255,216,0);
			#endregion

//			this.View.BackgroundColor = UIColor.FromRGB (255, 216, 0);
//			//this.scrollView.ContentSize = new SizeF (this.View.Frame.Width, 568);
//
//			menuItems = new List<MenuItem> { 
//				new MenuItem{ Name = (string.IsNullOrEmpty(AppDelegate.Order.FromAddress) ? "ОТКУДА" : AppDelegate.Order.FromAddress), ImageName = "from.png", Color = UIColor.FromRGB (255, 216, 0) },
//				new MenuItem{ Name = (string.IsNullOrEmpty(AppDelegate.Order.ToAddress) ? "КУДА" : AppDelegate.Order.ToAddress), ImageName = "to.png", Color = UIColor.FromRGB (255, 204, 0) },
//				new MenuItem{ Name = (string.IsNullOrEmpty(AppDelegate.Order.ToAddress) ? "КОГДА" :  (AppDelegate.Order.Minutes/60) + " час(ов)" + " " + (AppDelegate.Order.Minutes%60).ToString() + " мин"), ImageName = "when.png", Color = UIColor.FromRGB (255, 185, 1) }, 
//				new MenuItem{ Name = (string.IsNullOrEmpty(AppDelegate.Order.Comment) ? "ПРИМЕЧАНИЕ" : AppDelegate.Order.Comment), ImageName = "pen.png", Color = UIColor.FromRGB (255, 168, 0) }, 
//				new MenuItem{ Name = "ВЫЗВАТЬ", ImageName = "car.png", Color = UIColor.FromRGB (255, 144, 0) }, 
//				new MenuItem{ Name = "Я - ВОДИТЕЛЬ", ImageName = "id.png", Color = UIColor.FromRGB (255, 133, 0) }
//			};
//
//			int index = 0;
//			foreach (var v in this.scrollView.Subviews) {
//				if (v.GetType() != typeof(UIImageView) && index!=6) {
//					v.BackgroundColor = this.menuItems [index].Color;
//					(v.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [index].ImageName);
//					(v.Subviews [0] as UIImageView).ContentMode = UIViewContentMode.ScaleToFill;
//					(v.Subviews[1] as UITextField).Text = this.menuItems [index].Name;
//					(v.Subviews [1] as UITextField).Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);
//					(v.Subviews [1] as UITextField).TextColor = UIColor.FromRGB (50, 50, 50);
//
//					AttachAnimation (v, index);
//					index++;
//				}
//			}
		}

		public override void ViewWillAppear (bool animated)
		{
			this.NavigationController.NavigationBar.Hidden = true;

			base.ViewWillAppear (animated);

			if (NavPage == 1) {
				Navigate1 ();
			}
			if (NavPage == 2) {
				Navigate2 ();
			}
			else if (NavPage == 3) {
				Navigate3 ();
			}
			NavPage = 0;

			menuItems = new List<MenuItem> { 
				new MenuItem{ Name = "ОТКУДА", ImageName = "from.png", Color = UIColor.FromRGB (255, 216, 0) },
				new MenuItem{ Name = "КУДА", ImageName = "to.png", Color = UIColor.FromRGB (255, 204, 0) },
				new MenuItem{ Name = "КОГДА", ImageName = "when.png", Color = UIColor.FromRGB (255, 185, 1) }, 
				new MenuItem{ Name = "ПРИМЕЧАНИЕ", ImageName = "pen.png", Color = UIColor.FromRGB (255, 168, 0) }, 
				new MenuItem{ Name = "ВЫЗВАТЬ", ImageName = "car.png", Color = UIColor.FromRGB (255, 144, 0) }, 
				new MenuItem{ Name = "Я - ВОДИТЕЛЬ", ImageName = "id.png", Color = UIColor.FromRGB (255, 133, 0) }
			};

			int index = 0;
			foreach (var v in this.scrollView.Subviews) {
				if (v.GetType() != typeof(UIImageView) && index!=6) {
					v.BackgroundColor = this.menuItems [index].Color;
					(v.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [index].ImageName);
					(v.Subviews [0] as UIImageView).ContentMode = UIViewContentMode.ScaleToFill;
					(v.Subviews[1] as UITextField).Text = this.menuItems [index].Name;
					(v.Subviews [1] as UITextField).Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);
					(v.Subviews [1] as UITextField).TextColor = UIColor.FromRGB (50, 50, 50);

					if (index == 0 || index == 5) {
						AttachAnimation (v, index);
					}
					index++;
				}
			}
		}

		private void AttachAnimation(UIView v, int index){
			UITapGestureRecognizer gestureRecognizer = new UITapGestureRecognizer(()=>{
				foreach (var v2 in this.scrollView.Subviews){

					if(v!=v2){
						v2.Frame = new RectangleF(0,0,0,0);
					}else{
						//show views
						if(index<=3){
							double time = 0;
							if(index==0) time=0d;
							if(index==1) time=0.3d;
							if(index==2) time=0.4d;
							if(index==3) time=0.5d;

							UIView.Animate(time, 0d,
								UIViewAnimationOptions.BeginFromCurrentState,
								() => v.Frame = new RectangleF(0,94,320, this.View.Frame.Height),
								() => 
								{
									HandleView(v,index);
								});
						}
						//show OK button
						else if(index==4){
							HandleView(v,index);
						}
						//show Taxist's interface
						else if(index==5){
							HandleView(v,index);
						}
					}
				}



			});
			gestureRecognizer.CancelsTouchesInView = true;
			v.AddGestureRecognizer (gestureRecognizer);
		}

		private void HandleView(UIView v, int index){

			bool animate = false;
			string page = "";

			switch (index) {
			case 0:
				page = "FromViewController";
				break;
			case 1:
				//page = "ToViewController";
				break;
			case 2:
				//page = "WhenViewController";
				break;
			case 3:
				//page = "CommentViewController";
				break;
			case 4:
//				AppDelegate.Order = new Order {
//					ClientId = AppDelegate.ClientId,
//					FromAddress = AppDelegate.Order.FromAddress,
//					ToAddress = AppDelegate.Order.ToAddress,
//					FromLocation = "52.123124124, 75.123124124",
//					ToLocation = "52.123124124, 75.123124124",
//					Comment = AppDelegate.Order.Comment,
//					Minutes = AppDelegate.Order.Minutes,
//					CityId = "447055bf-db72-4313-af71-e7a84ae2ccd3"
//				};
//				AppDelegate.API.Orders.Create (AppDelegate.Order);
//				Console.WriteLine ("Order created at: " + DateTime.Now);
//				page = "ChooseTaxiViewController";
				break;
			case 5:
				page = "AuthViewController";
				animate = true;
				break;
			}

			if (string.IsNullOrEmpty (page))
				return;

			var vController = (AppDelegate.Storyboard.InstantiateViewController (page) as UIViewController);
			this.NavigationController.PushViewController (vController, animate);
		}

		public void Navigate1(){
			var vController = (AppDelegate.Storyboard.InstantiateViewController ("AuthViewController") as UIViewController);
			this.NavigationController.PushViewController (vController, false);
		}
		public void Navigate2(){
			var vController = (AppDelegate.Storyboard.InstantiateViewController ("Auth2ViewController") as UIViewController);
			this.NavigationController.PushViewController (vController, false);
		}

		public void Navigate3(){
			var vController = (AppDelegate.Storyboard.InstantiateViewController ("Auth3ViewController") as UIViewController);
			this.NavigationController.PushViewController (vController, false);
		}
	}
}

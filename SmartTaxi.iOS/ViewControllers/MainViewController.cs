// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Collections.Generic;
using System.Drawing;

namespace SmartTaxi.iOS
{
	public partial class MainViewController : UIViewController
	{
		List<MenuItem> menuItems;

		public MainViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			this.View.BackgroundColor = UIColor.FromRGB(255,216,0);

			menuItems = new List<MenuItem> { 
				new MenuItem{ Name = "Откуда", ImageName = "from.png", Color = UIColor.FromRGB (255, 216, 0) },
				new MenuItem{ Name = "Куда", ImageName = "to.png", Color = UIColor.FromRGB (255, 204, 0) },
				new MenuItem{ Name = "Когда", ImageName = "when.png", Color = UIColor.FromRGB (255, 185, 1) }, 
				new MenuItem{ Name = "Примечание", ImageName = "pen.png", Color = UIColor.FromRGB (255, 168, 0) }, 
				new MenuItem{ Name = "Вызвать", ImageName = "car.png", Color = UIColor.FromRGB (255, 144, 0) }, 
				new MenuItem{ Name = "Я - водитель", ImageName = "id.png", Color = UIColor.FromRGB (255, 133, 0) }
			};

			int index = 0;
			foreach (var v in this.scrollView.Subviews) {
				if (v.GetType() != typeof(UIImageView)) {
					v.BackgroundColor = this.menuItems [index].Color;
					(v.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [index].ImageName);
					(v.Subviews[1] as UITextField).Text = this.menuItems [index].Name;
					index++;

					UITapGestureRecognizer gestureRecognizer = new UITapGestureRecognizer(()=>{
						foreach (var v2 in this.scrollView.Subviews){
							v2.Frame = new RectangleF(0,-100,0,0);
						}

						int prevIndex = index - 1;
						if(prevIndex>=0){
							var prevView = this.scrollView.Subviews.ElementAt(prevIndex);
							this.View.BackgroundColor = prevView.BackgroundColor;
						}

						UIView.Animate(0.5d, 0d,
							UIViewAnimationOptions.BeginFromCurrentState,
							() => v.Frame = new RectangleF(0,0,320, this.View.Frame.Height),
							() => {

							});
					});
					gestureRecognizer.CancelsTouchesInView = true;
					v.AddGestureRecognizer (gestureRecognizer);
				}
			}
		}

		public override void ViewWillAppear (bool animated)
		{
			this.NavigationController.NavigationBar.Hidden = true;
			base.ViewWillAppear (animated);
		}
	}
}

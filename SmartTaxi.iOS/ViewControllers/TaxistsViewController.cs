// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Collections.Generic;
using System.Drawing;

namespace SmartTaxi.iOS
{
	public partial class TaxistsViewController : UIViewController
	{
		private List<MenuItem> menuItems;

		public TaxistsViewController (IntPtr handle) : base (handle)
		{
		}


		public override void ViewDidLoad ()
		{
			this.View.BackgroundColor = UIColor.FromRGB(255,216,0);
			this.View.BackgroundColor = UIColor.FromRGB (255, 216, 0);
			this.scrollView.ContentSize = new SizeF (this.View.Frame.Width, 568);


			menuItems = new List<MenuItem> { 
				new MenuItem{ Name = "ЗАКАЗЫ", ImageName = "orders.png", Color = UIColor.FromRGB (255, 216, 0) },
				new MenuItem{ Name = "НОВЫЙ ЗАКАЗ", ImageName = "order-new.png", Color = UIColor.FromRGB (255, 204, 0) },
				new MenuItem{ Name = "ОЖИДАНИЕ ОТВЕТА", ImageName = "order-waiting.png", Color = UIColor.FromRGB (255, 185, 1) }, 
				new MenuItem{ Name = "ПОДТВЕРЖДЕН", ImageName = "order-accepted.png", Color = UIColor.FromRGB (255, 168, 0) }, 
				new MenuItem{ Name = "5000 Т", ImageName = "money.png", Color = UIColor.FromRGB (255, 144, 0) }, 
				new MenuItem{ Name = "Владимир Пришвин", ImageName = "id.png", Color = UIColor.FromRGB (255, 133, 0) }
			};

			int index = 0;
			foreach (var v in this.scrollView.Subviews) {
				if (v.GetType() != typeof(UIImageView)) {
					v.BackgroundColor = this.menuItems [index].Color;
					(v.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [index].ImageName);
					(v.Subviews [0] as UIImageView).ContentMode = UIViewContentMode.ScaleToFill;
					(v.Subviews [1] as UITextField).Text = this.menuItems [index].Name;
					(v.Subviews [1] as UITextField).Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);
					(v.Subviews [1] as UITextField).TextColor = UIColor.FromRGB (50, 50, 50);


					AttachAnimation (v, index);
					index++;
				}
			}
		}


		public override void ViewWillAppear (bool animated)
		{
			this.NavigationController.NavigationBar.Hidden = true;
			base.ViewWillAppear (animated);
		}

		private void AttachAnimation(UIView v, int index){
			UITapGestureRecognizer gestureRecognizer = new UITapGestureRecognizer(()=>{
//				foreach (var v2 in this.scrollView.Subviews){
//					v2.Frame = new RectangleF(0,-100,0,0);
//				}

//				int prevIndex = index - 1;
//				if(prevIndex>=0){
//					var prevView = this.scrollView.Subviews.ElementAt(prevIndex);
//					this.View.BackgroundColor = prevView.BackgroundColor;
//				}

				//show views
				if(index<=3){
					UIView.Animate(0.5d, 0d,
						UIViewAnimationOptions.BeginFromCurrentState,
						() => v.Frame = new RectangleF(0,0,320, this.View.Frame.Height),
						() => 
						{
							HandleView(v,index);
						});
				}else if(index==5){
					HandleView(v,index);
				}
			});
			gestureRecognizer.CancelsTouchesInView = true;
			v.AddGestureRecognizer (gestureRecognizer);
		}

		private void HandleView(UIView v, int index){
			bool animate = false;
			string page = "";

			switch (index) {
			case 0:
				break;
			case 1:
				break;
			case 2:
				break;
			case 3:
				break;
			case 4:
				break;
			case 5:
				page = "ProfileViewController";
				animate = false;
				break;
			}

			if (string.IsNullOrEmpty (page))
				return;

			var vController = (AppDelegate.Storyboard.InstantiateViewController (page) as UIViewController);
			this.NavigationController.PushViewController (vController, animate);
		}
	}
}

// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Linq;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Collections.Generic;
using System.Drawing;

namespace SmartTaxi.iOS
{
	public partial class TaxistsViewController : UIViewController
	{
		private List<MenuItem> menuItems;

		public TaxistsViewController (IntPtr handle) : base (handle)
		{
		}


		public override void ViewDidLoad ()
		{
			this.NavigationItem.SetHidesBackButton (true, false);

			this.View.BackgroundColor = UIColor.FromRGB(255,216,0);
			this.View.BackgroundColor = UIColor.FromRGB (255, 216, 0);
			this.scrollView.ContentSize = new SizeF (this.View.Frame.Width, 568);

			#region Temp
			AppDelegate.Taxi = new SmartTaxi.Models.Taxi{
				ClientBalance = 5000,
				TaxtFirstname = "Максим",
				TaxiLastname = "Галкин",
				TaxiMarka = "BMW",
				TaxiModel = "X6",
				TaxiCarnumber = "A666SDM",
				TaxiPhone = "87711235487",
				TaxiColor = "черный"
			};
			#endregion

			menuItems = new List<MenuItem> { 
				new MenuItem{ Name = "ЗАКАЗЫ", ImageName = "orders.png", Color = UIColor.FromRGB (255, 216, 0) },
				new MenuItem{ Name = "НОВЫЙ ЗАКАЗ", ImageName = "order-new.png", Color = UIColor.FromRGB (255, 204, 0) },
				new MenuItem{ Name = "ОЖИДАНИЕ ОТВЕТА", ImageName = "order-waiting.png", Color = UIColor.FromRGB (255, 185, 1) }, 
				new MenuItem{ Name = "ПОДТВЕРЖДЕН", ImageName = "order-accepted.png", Color = UIColor.FromRGB (255, 168, 0) }, 
				new MenuItem{ Name = AppDelegate.Taxi.ClientBalance +  " Т", ImageName = "money.png", Color = UIColor.FromRGB (255, 144, 0) }, 
				new MenuItem{ Name = AppDelegate.Taxi.TaxiLastname + " " + AppDelegate.Taxi.TaxtFirstname, ImageName = "id.png", Color = UIColor.FromRGB (255, 133, 0) }
			};


			_block1View.BackgroundColor = this.menuItems [0].Color;
			(_block1View.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [0].ImageName);
			(_block1View.Subviews [0] as UIImageView).ContentMode = UIViewContentMode.ScaleToFill;
			(_block1View.Subviews [1] as UITextField).Text = this.menuItems [0].Name;
			(_block1View.Subviews [1] as UITextField).Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);
			(_block1View.Subviews [1] as UITextField).TextColor = UIColor.FromRGB (50, 50, 50);
			AttachAnimation (_block1View, 0);

			_block2View.BackgroundColor = this.menuItems [4].Color;
			(_block2View.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [4].ImageName);
			(_block2View.Subviews [0] as UIImageView).ContentMode = UIViewContentMode.ScaleToFill;
			(_block2View.Subviews [1] as UITextField).Text = this.menuItems [4].Name;
			(_block2View.Subviews [1] as UITextField).Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);
			(_block2View.Subviews [1] as UITextField).TextColor = UIColor.FromRGB (50, 50, 50);
			AttachAnimation (_block2View, 4);

			_block3View.BackgroundColor = this.menuItems [5].Color;
			(_block3View.Subviews [0] as UIImageView).Image = UIImage.FromBundle ("Menu/" + this.menuItems [5].ImageName);
			(_block3View.Subviews [0] as UIImageView).ContentMode = UIViewContentMode.ScaleToFill;
			(_block3View.Subviews [1] as UITextField).Text = this.menuItems [5].Name;
			(_block3View.Subviews [1] as UITextField).Font = UIFont.FromName (AppDelegate.FontRobotoCondensedLight,25f);
			(_block3View.Subviews [1] as UITextField).TextColor = UIColor.FromRGB (50, 50, 50);
			AttachAnimation (_block3View, 5);

			_ordersTableView.Source = new OrdersDataSource (_ordersTableView, AppDelegate.Orders, this.NavigationController);
		}


		public override void ViewWillAppear (bool animated)
		{
			this.NavigationController.NavigationBar.Hidden = true;
			base.ViewWillAppear (animated);
		}

		private void AttachAnimation(UIView v, int index){
			UITapGestureRecognizer gestureRecognizer = new UITapGestureRecognizer(()=>{

				//show views
				if(index<=3){
					UIView.Animate(0.5d, 0d,
						UIViewAnimationOptions.BeginFromCurrentState,
						() => v.Frame = new RectangleF(0,0,320, this.View.Frame.Height),
						() => 
						{
							HandleView(v,index);
						});
				}else if(index==5){
					HandleView(v,index);
				}
			});
			gestureRecognizer.CancelsTouchesInView = true;
			v.AddGestureRecognizer (gestureRecognizer);
		}

		private void HandleView(UIView v, int index){
			bool animate = false;
			string page = "";

			switch (index) {
			case 0:
				//page = "OrderInfoViewController";
				break;
			case 1:
				break;
			case 2:
				break;
			case 3:
				break;
			case 4:
				break;
			case 5:
				page = "ProfileViewController";
				animate = true;
				break;
			}

			if (string.IsNullOrEmpty (page))
				return;

			var vController = (AppDelegate.Storyboard.InstantiateViewController (page) as UIViewController);
			this.NavigationController.PushViewController (vController, animate);
		}
	}
}
